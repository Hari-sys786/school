androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzg
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzgc: long zzn
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] values()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason valueOf(java.lang.String)
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
kotlinx.coroutines.CompletedExceptionally
kotlinx.coroutines.android.AndroidExceptionPreHandler
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzY
androidx.window.layout.SidecarAdapter: SidecarAdapter()
com.example.one.MainActivity
com.google.firebase.FirebaseCommonRegistrar
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.internal.measurement.zzex: int zze
kotlinx.coroutines.scheduling.GlobalQueue
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
kotlinx.coroutines.ChildHandleNode
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
androidx.window.core.Version: int minor
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.channels.RendezvousChannel
androidx.window.R$attr
com.google.android.gms.internal.measurement.zzfw: com.google.android.gms.internal.measurement.zzkj zzk
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable
com.google.android.gms.internal.measurement.zzgx: java.lang.String zzi
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
kotlinx.coroutines.AbstractCoroutine
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
io.flutter.embedding.android.FlutterTextureView
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
com.google.android.gms.measurement.AppMeasurement
androidx.window.embedding.SplitPairFilter: int hashCode()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzfo zza
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.core.ExperimentalWindowApi
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
androidx.window.embedding.SplitRule$LayoutDir
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.database.DatabaseRegistrar: java.util.List getComponents()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzab
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
kotlinx.coroutines.channels.AbstractSendChannel: java.lang.Object onCloseHandler
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.R$styleable: int[] ActivityFilter
com.google.android.gms.internal.measurement.zzfw
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
androidx.core.app.RemoteActionCompat
io.flutter.embedding.engine.FlutterOverlaySurface: int id
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzcf)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.R$id: int androidx_window_activity_scope
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
kotlinx.coroutines.JobSupport
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfe: int zzh
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzfe zza
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzgc: int zzt
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzag
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzcf)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitRuleParser
androidx.window.embedding.SplitInfo
androidx.window.embedding.ActivityStack: boolean isEmpty()
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzl
androidx.window.core.Bounds: int left
androidx.window.R$styleable: int ActivityFilter_activityName
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.window.core.Version
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.android.gms.internal.measurement.zzfw: com.google.android.gms.internal.measurement.zzfw zza
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzz
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
androidx.window.embedding.EmbeddingRule
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzcf)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkh zzU
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzQ
com.google.android.gms.internal.measurement.zzfw: java.lang.String zzf
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
androidx.window.embedding.EmbeddingInterfaceCompat
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
androidx.window.embedding.EmbeddingAdapter
com.google.android.gms.internal.measurement.zzgc: long zzx
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
androidx.window.core.Version$bigInteger$2
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.window.core.Bounds: int bottom
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
kotlinx.coroutines.LazyStandaloneCoroutine
com.example.one.MainActivity: MainActivity()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
com.google.android.gms.internal.measurement.zzgc: int zzL
androidx.window.embedding.MatcherUtils: MatcherUtils()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
kotlinx.coroutines.scheduling.CoroutineScheduler
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
com.google.android.gms.internal.measurement.zzgo
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzci)
com.google.android.gms.internal.measurement.zzej: int zze
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzcf)
kotlinx.coroutines.internal.LockFreeTaskQueue
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
kotlinx.coroutines.CancellableContinuationImpl: int _decision
androidx.window.embedding.SplitRule: float getSplitRatio()
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzgc: boolean zzA
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] values()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
kotlinx.coroutines.internal.AtomicOp
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
androidx.window.core.Version: int getMinor()
io.flutter.embedding.android.FlutterSplashView$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzil: int zzb
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.internal.measurement.zzes: boolean zzj
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzo
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
kotlinx.coroutines.channels.AbstractSendChannel
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzn
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
androidx.window.R$attr: int splitMinWidth
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
androidx.window.R$attr: int primaryActivityName
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
com.google.android.gms.internal.measurement.zzfg: java.lang.String zzg
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzE
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
com.google.firebase.database.DatabaseRegistrar
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.google.android.gms.internal.measurement.zzgj: int zzf
androidx.window.R$attr: int finishSecondaryWithPrimary
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzgh zzg
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
kotlin.jvm.internal.Lambda: int arity
androidx.window.layout.WindowMetricsCalculator
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzr
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
com.google.android.gms.internal.measurement.zzfm
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$602(io.flutter.embedding.android.FlutterSplashView$SavedState,java.lang.String)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
io.flutter.plugins.GeneratedPluginRegistrant
androidx.window.core.Version: java.lang.String description
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
androidx.window.embedding.ActivityStack: java.util.List activities
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
androidx.activity.ComponentActivity$3
com.google.android.gms.internal.measurement.zzfw: java.lang.String zzg
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.android.gms.internal.measurement.zzgh
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
io.flutter.embedding.android.FlutterSurfaceView
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgs zza
com.google.android.gms.internal.measurement.zzgc: int zzD
com.google.android.gms.internal.measurement.zzgc: long zzy
androidx.savedstate.SavedStateRegistry$1
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
com.google.android.gms.internal.measurement.zzga
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzki zze
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.google.android.gms.internal.measurement.zzfg: java.lang.String zzf
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.core.Bounds: boolean isZero()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzv
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
com.google.firebase.analytics.FirebaseAnalytics
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.window.layout.ExtensionWindowLayoutInfoBackend
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
androidx.window.R$attr: int clearTop
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzae
androidx.window.core.Version$Companion: Version$Companion()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
com.google.android.gms.internal.measurement.zzgc: long zzC
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzkj zze
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
com.google.android.gms.internal.measurement.zzgs: int zze
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzkj zzh
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
io.flutter.embedding.android.FlutterImageView
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzcf)
kotlinx.coroutines.channels.ArrayChannel
androidx.window.R$styleable: int SplitPairRule_splitRatio
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
kotlin.jvm.internal.CallableReference: boolean isFinal()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzgf zzT
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.lifecycle.LiveData$LifecycleBoundObserver
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
com.google.android.gms.internal.measurement.zzgl: int zze
kotlinx.coroutines.channels.ConflatedChannel
com.google.android.gms.internal.measurement.zzfm: int zze
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzw
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
kotlinx.coroutines.ChildContinuation
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState valueOf(java.lang.String)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
androidx.window.layout.FoldingFeature$Orientation
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
com.google.android.gms.internal.measurement.zzfs: long zzh
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.window.R$attr: R$attr()
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.google.android.gms.internal.measurement.zzgq
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
androidx.window.embedding.SplitController$Companion
kotlinx.coroutines.InvokeOnCompletion
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
com.google.android.gms.internal.measurement.zzej: boolean zzi
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzl
androidx.window.layout.DisplayCompatHelperApi17
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
com.google.android.gms.common.api.GoogleApiActivity
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
com.google.firebase.database.DatabaseRegistrar: DatabaseRegistrar()
kotlinx.coroutines.CompletionHandlerBase
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
androidx.window.R$id: int rtl
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.android.gms.internal.measurement.zzfa: java.lang.String zzf
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.window.embedding.SplitRule: int minSmallestWidth
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
io.flutter.embedding.android.FlutterSplashView$SavedState
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
kotlinx.coroutines.CancellableContinuationImpl
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
androidx.window.embedding.SplitRule$Api30Impl
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfa: int zze
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType valueOf(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] values()
androidx.window.core.Version: int getPatch()
androidx.window.embedding.SplitPairRule: int hashCode()
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
com.google.android.gms.internal.measurement.zzfs: int zze
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
com.google.android.gms.internal.measurement.zzgl
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
androidx.window.embedding.SplitInfo: float getSplitRatio()
kotlinx.coroutines.DefaultExecutor
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzeq zzj
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzaf
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
com.google.android.gms.internal.measurement.zzes: com.google.android.gms.internal.measurement.zzes zza
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.layout.HardwareFoldingFeature$Companion
com.google.android.gms.internal.measurement.zzfy: com.google.android.gms.internal.measurement.zzfm zzh
com.google.android.gms.internal.measurement.zzgf: com.google.android.gms.internal.measurement.zzkj zzg
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
com.google.android.gms.internal.measurement.zzgc: long zzO
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.window.layout.SidecarCompat$DistinctElementCallback
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.window.embedding.SplitRule: SplitRule()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
com.google.android.gms.internal.measurement.zzex: int zzf
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
com.google.android.gms.internal.measurement.zzfi: java.lang.String zzf
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzgl: java.lang.String zzh
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformViewFactory viewFactory
androidx.window.layout.WindowInfoTracker$Companion: void reset()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.android.gms.internal.measurement.zzeq
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzF
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzk
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
com.google.android.gms.measurement.AppMeasurementReceiver
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
androidx.window.embedding.SplitController: boolean sDebug
kotlinx.coroutines.EventLoopImplBase
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.google.android.gms.internal.measurement.zzfu: int zze
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
androidx.window.R$attr: int alwaysExpand
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
com.google.android.gms.internal.measurement.zzfa: boolean zzh
androidx.core.app.CoreComponentFactory
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
com.google.android.gms.common.api.internal.LifecycleCallback
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
com.google.android.gms.internal.measurement.zzgf: int zzf
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
kotlin.jvm.internal.CallableReference: CallableReference()
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
com.google.android.gms.internal.measurement.zzgc: int zzh
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.android.gms.internal.measurement.zzes: int zze
androidx.window.embedding.SplitRule: int hashCode()
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType valueOf(java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
androidx.window.core.Bounds: int getWidth()
com.google.android.gms.internal.measurement.zzgx: java.lang.String zzh
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzgc: boolean zzG
androidx.window.layout.FoldingFeature$State
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.window.core.Version: boolean equals(java.lang.Object)
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarWindowBackend
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
com.google.android.gms.internal.measurement.zzgf
androidx.fragment.app.FragmentManagerViewModel
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.google.android.gms.internal.measurement.zzgx: boolean zzj
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzck)
com.google.android.gms.internal.measurement.zzgf: com.google.android.gms.internal.measurement.zzgf zza
androidx.window.R: R()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzh
kotlin.jvm.internal.FunctionReference: int flags
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.layout.EmptyDecorator: EmptyDecorator()
com.google.android.gms.internal.measurement.zzfw: double zzj
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
com.google.android.gms.internal.measurement.zzfo: boolean zzi
com.google.android.gms.internal.measurement.zzeh: int zzf
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzg
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
androidx.window.layout.SidecarCompat$Companion
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
com.google.android.gms.measurement.internal.zzav: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.measurement.zzfu: long zzg
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.android.gms.internal.measurement.zzcb: zzcb()
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzi
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.window.embedding.ActivityRule: java.util.Set filters
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
com.google.android.gms.internal.measurement.zzfq
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
com.google.android.gms.internal.measurement.zzgc: long zzo
com.google.android.gms.internal.measurement.zzej: java.lang.String zzg
androidx.window.embedding.ActivityRule: boolean alwaysExpand
com.google.android.gms.internal.measurement.zzgc: int zzK
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.window.R$styleable: int SplitPairRule_clearTop
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
kotlinx.coroutines.JobSupport: java.lang.Object _state
androidx.window.R$id: int ltr
io.flutter.view.AccessibilityViewEmbedder
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String access$600(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
androidx.window.layout.WindowMetrics
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.window.layout.FoldingFeature$State: java.lang.String description
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
com.google.android.gms.internal.measurement.zzgl: java.lang.String zzg
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.android.gms.internal.measurement.zzfa
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
com.google.android.gms.internal.measurement.zzgo: com.google.android.gms.internal.measurement.zzgo zza
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
kotlinx.coroutines.CancelledContinuation
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
com.google.android.gms.internal.measurement.zzfw: long zzh
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.google.android.gms.internal.measurement.zzeq: int zzf
androidx.window.layout.SidecarCompat$FirstAttachAdapter
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
kotlinx.coroutines.scheduling.LimitingDispatcher
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
com.google.android.gms.internal.measurement.zzgs
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
kotlinx.coroutines.CommonPool: java.util.concurrent.Executor pool
io.flutter.view.FlutterCallbackInformation
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.window.core.Version: int getMajor()
com.google.android.gms.internal.measurement.zzfs: int zzj
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.google.firebase.components.ComponentDiscoveryService
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] values()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgq: java.lang.String zzf
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
com.google.android.gms.internal.measurement.zzfq: int zzf
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.gms.internal.measurement.zzfy: com.google.android.gms.internal.measurement.zzfy zza
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
com.google.android.gms.measurement.AppMeasurementService
androidx.versionedparcelable.ParcelImpl
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
androidx.window.core.Bounds: Bounds(int,int,int,int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.window.layout.ExtensionInterfaceCompat
androidx.window.embedding.SplitInfo: int hashCode()
androidx.window.embedding.ExtensionEmbeddingBackend
com.google.android.gms.common.util.DynamiteApi
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.reflect.Method preHandler()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
com.google.android.gms.internal.measurement.zzbl: com.google.android.gms.internal.measurement.zzbl[] values()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformViewFactory,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,java.lang.Object,android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.measurement.zzfc: boolean zzh
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.google.android.gms.internal.measurement.zzej: com.google.android.gms.internal.measurement.zzej zza
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzkj zzh
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$202(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
kotlinx.coroutines.JobNode
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
kotlin.jvm.internal.FunctionReference: boolean isInline()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzfy zzad
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.google.android.gms.internal.measurement.zzes: com.google.android.gms.internal.measurement.zzel zzh
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.google.android.gms.internal.measurement.zzel: int zze
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
kotlin.jvm.internal.CallableReference: java.lang.Class owner
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
com.google.android.gms.internal.measurement.zzbn: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.window.java.R: R()
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
kotlinx.coroutines.channels.AbstractSendChannel$SendBuffered
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int overlayInsetTypes
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.google.android.gms.internal.measurement.zzeq: boolean zzg
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
kotlinx.coroutines.channels.ArrayChannel: int size
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga zza
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.layout.WindowLayoutInfo: int hashCode()
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] values()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
com.google.android.gms.internal.measurement.zzgc: long zzW
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
com.google.android.gms.internal.measurement.zzgx: int zzf
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
com.google.android.gms.internal.measurement.zzeq: int zze
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzcf,int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.window.R$styleable: R$styleable()
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.google.android.gms.internal.measurement.zzfc: int zzi
kotlinx.coroutines.InvokeOnCancelling
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.android.gms.internal.measurement.zzfy
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcf,long)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
androidx.window.embedding.MatcherUtils
com.google.android.gms.internal.measurement.zzfs: long zzi
kotlin.jvm.internal.FunctionReference: int getArity()
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcel)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
com.google.android.gms.internal.measurement.zzfa: com.google.android.gms.internal.measurement.zzkj zzg
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
com.google.android.gms.internal.measurement.zzfw: int zze
androidx.window.R$attr: int splitRatio
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
kotlinx.coroutines.android.HandlerContext
kotlinx.coroutines.UndispatchedCoroutine
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.EmptyEmbeddingComponent
androidx.window.layout.HardwareFoldingFeature$Type$Companion
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzcl,long)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.android.FlutterSplashView$SavedState: FlutterSplashView$SavedState(android.os.Parcelable)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
androidx.window.layout.DisplayFeature
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzkj zzg
com.google.android.gms.internal.measurement.zzfm: com.google.android.gms.internal.measurement.zzfm zza
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
com.google.android.gms.measurement.internal.zzab: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfe
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzX
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgx: int zze
com.google.android.gms.internal.measurement.zzfe: int zze
androidx.window.R$attr: int activityAction
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
androidx.window.R$styleable: int[] SplitPairRule
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfs
com.google.android.gms.internal.measurement.zzfq: com.google.android.gms.internal.measurement.zzfq zza
com.google.android.gms.internal.measurement.zzkn: com.google.android.gms.internal.measurement.zzkn[] values()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.measurement.zzex: boolean zzh
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzeh zza
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
androidx.window.core.Bounds: int top
com.google.android.gms.internal.measurement.zzgl: long zzf
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
com.google.android.gms.internal.measurement.zzfy: java.lang.String zzg
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
com.google.android.gms.internal.measurement.zzkc: int zzd
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
androidx.window.layout.WindowInfoTracker
kotlinx.coroutines.NodeList
com.google.android.gms.internal.measurement.zzgc: int zzg
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgj: int zze
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.FoldingFeature: boolean isSeparating()
androidx.annotation.Keep
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
com.google.android.gms.internal.measurement.zzfq: long zzg
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
com.google.android.gms.internal.measurement.zzgq: com.google.android.gms.internal.measurement.zzkj zzg
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
com.google.android.gms.internal.measurement.zzfc: int zze
kotlinx.coroutines.channels.Receive
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType valueOf(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
com.google.android.gms.internal.measurement.zzfg
kotlinx.coroutines.android.AndroidDispatcherFactory
com.google.android.gms.common.annotation.KeepName
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
kotlin.jvm.internal.FunctionReference: boolean isInfix()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
androidx.window.core.Bounds: java.lang.String toString()
com.google.android.gms.internal.measurement.zznb: com.google.android.gms.internal.measurement.zznb[] values()
androidx.window.layout.ActivityCompatHelperApi24
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzs
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View,int,int)
kotlinx.coroutines.channels.LinkedListChannel
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
kotlinx.coroutines.channels.AbstractChannel$enqueueReceiveInternal$$inlined$addLastIfPrevAndIf$1
androidx.window.core.Version: java.lang.String getDescription()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzci)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
com.google.android.gms.internal.measurement.zzfi: java.lang.String zzg
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
com.google.android.gms.internal.measurement.zzfo: com.google.android.gms.internal.measurement.zzgh zzh
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzeq zzg
androidx.window.layout.WindowMetricsCalculatorDecorator
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
androidx.window.core.Bounds: int getRight()
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.layout.WindowMetrics: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.android.gms.internal.measurement.zzel: boolean zzh
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzfa: com.google.android.gms.internal.measurement.zzfa zza
androidx.window.embedding.SplitPairRule
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
androidx.lifecycle.SingleGeneratedAdapterObserver
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.window.R$attr: int splitMinSmallestWidth
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.android.gms.measurement.internal.zzag: com.google.android.gms.measurement.internal.zzag[] values()
androidx.window.layout.WindowInfoTrackerImpl$Companion
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: boolean isSplitSupported()
com.google.android.gms.internal.measurement.zzgl: long zzi
androidx.window.layout.HardwareFoldingFeature$Type
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.android.gms.internal.measurement.zzeh
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom valueOf(java.lang.String)
kotlin.jvm.internal.Lambda: java.lang.String toString()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.window.layout.SidecarAdapter
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.R$styleable
com.google.android.gms.internal.measurement.zzex: com.google.android.gms.internal.measurement.zzkj zzi
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
com.google.android.gms.internal.measurement.zzfi: com.google.android.gms.internal.measurement.zzfi zza
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
com.google.android.gms.internal.measurement.zzgj: com.google.android.gms.internal.measurement.zzgj zza
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.google.android.gms.internal.measurement.zzgx
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzkj zzf
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
androidx.window.layout.WindowLayoutInfo
com.google.android.gms.internal.measurement.zzgc: long zzm
androidx.window.embedding.SplitInfo: float splitRatio
com.google.android.gms.internal.measurement.zzgj: com.google.android.gms.internal.measurement.zzki zzg
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.gms.common.internal.zzj: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.measurement.internal.zzll: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
androidx.window.embedding.ActivityStack: int hashCode()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.google.android.gms.internal.measurement.zzej: int zzf
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
kotlinx.coroutines.JobSupport$Finishing
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
kotlinx.coroutines.internal.LockFreeTaskQueueCore
com.google.android.gms.internal.measurement.zzgs: com.google.android.gms.internal.measurement.zzgo zzg
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.core.Version: int compareTo(java.lang.Object)
kotlinx.coroutines.InvokeOnCancelling: int _invoked
kotlin.jvm.internal.CallableReference: java.lang.String getName()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.android.gms.internal.measurement.zzfc: java.lang.String zzf
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.measurement.zzes: int zzf
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzio getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzcf,long)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
com.google.android.gms.internal.measurement.zzfw: float zzi
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus valueOf(java.lang.String)
io.flutter.embedding.android.FlutterView
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
com.google.android.gms.internal.measurement.zzel: java.lang.String zzi
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
kotlinx.coroutines.internal.LockFreeLinkedListHead
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfu
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
androidx.window.embedding.SplitRule
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
kotlinx.coroutines.channels.Send
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
com.google.android.gms.internal.measurement.zzbn: android.os.IBinder asBinder()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
kotlinx.coroutines.DispatchedCoroutine: int _decision
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.android.gms.internal.measurement.zzfy: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzf
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzkc: com.google.android.gms.internal.measurement.zzmm zzc
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzi
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzI
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
androidx.window.embedding.SplitController
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.android.gms.internal.measurement.zzeh: boolean zzi
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$702(io.flutter.embedding.android.FlutterSplashView$SavedState,android.os.Bundle)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
kotlin.jvm.internal.FunctionReference: int arity
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.lifecycle.Lifecycling$1
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
kotlin.jvm.internal.CallableReference: java.lang.String signature
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.internal.measurement.zzfi
com.google.android.gms.measurement.internal.zzat: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzgl: com.google.android.gms.internal.measurement.zzgl zza
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
kotlinx.coroutines.JobCancellingNode
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.google.android.gms.internal.measurement.zzej: boolean zzm
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
com.google.android.gms.internal.measurement.zzgc: int zzf
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
androidx.window.embedding.ActivityFilter
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
com.google.android.gms.internal.measurement.zzes: boolean zzi
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
com.google.android.gms.internal.measurement.zzex
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzu
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
kotlinx.coroutines.scheduling.LimitingDispatcher: int inFlightTasks
com.google.android.gms.measurement.AppMeasurementJobService
com.google.android.gms.internal.measurement.zzfg: int zze
androidx.window.core.Bounds
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] values()
com.google.android.gms.internal.measurement.zzgf: int zze
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
com.google.android.gms.internal.measurement.zzfi: int zze
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.CancelledContinuation: int _resumed
com.google.android.gms.internal.measurement.zzfy: int zze
androidx.window.layout.ActivityCompatHelperApi30
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
androidx.window.embedding.SplitPairRule: boolean getClearTop()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
androidx.window.R$styleable: int ActivityRule_alwaysExpand
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.android.gms.internal.measurement.zzfo: int zzf
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
androidx.window.core.Bounds: int getLeft()
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
com.google.android.gms.internal.measurement.zzeh: int zze
androidx.window.layout.FoldingFeature$OcclusionType$Companion
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzej: boolean zzk
com.google.android.gms.internal.measurement.zzes: java.lang.String zzg
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfu: com.google.android.gms.internal.measurement.zzfu zza
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.window.layout.WindowInfoTrackerDecorator
kotlinx.coroutines.scheduling.WorkQueue
com.google.android.gms.internal.measurement.zzgc: int zzJ
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
android.support.v4.graphics.drawable.IconCompatParcelizer
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.gms.internal.measurement.zzeh: com.google.android.gms.internal.measurement.zzkj zzh
androidx.lifecycle.ReportFragment$LifecycleCallbacks
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$602(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.common.zzn: android.os.Parcelable$Creator CREATOR
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
kotlinx.coroutines.JobImpl
androidx.window.core.Bounds: int right
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.android.gms.internal.measurement.zzgc: long zzN
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzj
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
kotlin.jvm.internal.CallableReference: boolean isTopLevel
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.google.firebase.installations.FirebaseInstallationsRegistrar
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.window.core.Bounds: int getBottom()
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
com.google.android.gms.internal.measurement.zzfe: long zzf
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
io.flutter.embedding.android.FlutterSplashView$SavedState: java.lang.String previousCompletedSplashIsolate
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
com.google.android.gms.internal.measurement.zzfe: java.lang.String zzp
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzki zzf
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
com.google.android.gms.internal.measurement.zzfg: com.google.android.gms.internal.measurement.zzfg zza
com.google.android.gms.internal.measurement.zzfm: java.lang.String zzj
kotlinx.coroutines.channels.AbstractChannel$ReceiveHasNext
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.google.android.gms.internal.measurement.zzju: com.google.android.gms.internal.measurement.zzju[] values()
androidx.lifecycle.FullLifecycleObserverAdapter
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
com.google.android.gms.internal.measurement.zzgl: float zzj
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
androidx.window.R$attr: int secondaryActivityAction
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
androidx.window.embedding.SplitController: SplitController()
com.google.android.gms.internal.measurement.zzfo: int zze
androidx.window.R$id
com.google.android.gms.internal.measurement.zzgc: int zzR
com.google.android.gms.internal.measurement.zzfo
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.window.embedding.EmbeddingBackend
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
androidx.window.embedding.ActivityStack: boolean isEmpty
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
kotlinx.coroutines.DispatchedCoroutine
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
androidx.window.embedding.EmbeddingCompat$Companion
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle access$700(io.flutter.embedding.android.FlutterSplashView$SavedState)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
kotlinx.coroutines.channels.Closed
androidx.window.embedding.SplitRule: float splitRatio
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] values()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzi
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] values()
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] values()
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
androidx.window.R$attr: int placeholderActivityName
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzh
androidx.window.R$attr: int secondaryActivityName
androidx.window.core.Version: int patch
com.google.android.gms.internal.measurement.zzfc
com.google.android.gms.internal.measurement.zzfc: boolean zzg
kotlin.jvm.internal.FunctionReference: boolean isExternal()
com.google.android.gms.internal.measurement.zznc: com.google.android.gms.internal.measurement.zznc[] values()
androidx.window.R$attr: int activityName
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
androidx.window.layout.WindowMetrics: int hashCode()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
androidx.window.embedding.ActivityFilter: int hashCode()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzgc zze
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzj
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
androidx.window.embedding.SplitRule: int getMinWidth()
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.window.core.Version$Companion
androidx.window.embedding.SplitInfo: java.lang.String toString()
com.google.android.gms.internal.measurement.zzel
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
androidx.activity.ComponentActivity$2
androidx.window.R
io.flutter.embedding.engine.FlutterJNI: java.lang.String observatoryUri
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
com.google.android.gms.internal.measurement.zzgo: com.google.android.gms.internal.measurement.zzkj zze
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitRule: int getLayoutDirection()
androidx.window.embedding.EmbeddingCompat
com.google.android.gms.internal.measurement.zzeh: boolean zzj
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.window.R$styleable: int[] SplitPlaceholderRule
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzM
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.window.java.R
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.google.android.gms.internal.measurement.zzgj
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzfs zza
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] values()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
androidx.window.embedding.ActivityRule
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzgh zza
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
androidx.window.layout.SidecarCompat
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
androidx.window.core.Version: int major
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
androidx.window.core.Version: java.lang.String toString()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.lifecycle.CompositeGeneratedAdaptersObserver
com.google.android.gms.common.internal.ReflectedParcelable
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzi
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
androidx.savedstate.Recreator
androidx.core.graphics.drawable.IconCompatParcelizer
com.google.android.gms.internal.measurement.zzfu: java.lang.String zzf
kotlinx.coroutines.internal.LockFreeLinkedListNode
com.google.android.gms.internal.measurement.zzgx: double zzk
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.google.android.gms.measurement.internal.zzp: android.os.Parcelable$Creator CREATOR
androidx.lifecycle.ViewModel: ViewModel()
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzex zzf
kotlin.jvm.internal.CallableReference: java.lang.String name
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.window.R$styleable: int[] SplitPairFilter
kotlin.jvm.internal.CallableReference: boolean isOpen()
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.WindowBackend
androidx.fragment.app.Fragment$2
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzcf)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.gms.internal.measurement.zzgh: com.google.android.gms.internal.measurement.zzkj zzg
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.embedding.SplitPairRule: boolean clearTop
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
kotlinx.coroutines.DefaultExecutor: int debugStatus
androidx.window.layout.SidecarAdapter$Companion
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
com.google.android.gms.internal.measurement.zzex: java.lang.String zzg
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
com.google.android.gms.internal.measurement.zzfc: com.google.android.gms.internal.measurement.zzfc zza
com.google.android.gms.internal.measurement.zzfs: java.lang.String zzg
androidx.window.embedding.ActivityStack
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
androidx.window.layout.HardwareFoldingFeature
androidx.window.layout.DisplayCompatHelperApi28
androidx.window.embedding.SplitPairRule: java.util.Set filters
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
androidx.window.embedding.SplitPairFilter
androidx.window.R$id: R$id()
androidx.window.core.Version: int hashCode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.gms.internal.measurement.zzcl: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
androidx.window.core.Bounds: boolean equals(java.lang.Object)
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.core.graphics.drawable.IconCompat
kotlin.jvm.internal.CallableReference: boolean isAbstract()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzS
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
kotlinx.coroutines.internal.DispatchedContinuation
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
kotlinx.coroutines.internal.ThreadSafeHeap
com.google.android.gms.internal.measurement.zzfe: com.google.android.gms.internal.measurement.zzkj zzk
kotlinx.coroutines.internal.ScopeCoroutine
com.google.android.gms.internal.measurement.zzeq: com.google.android.gms.internal.measurement.zzeq zza
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.core.app.RemoteActionCompatParcelizer
androidx.window.embedding.SplitRule: int minWidth
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.google.android.gms.internal.measurement.zzgc: int zza
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.window.R$attr: int splitLayoutDirection
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
kotlin.jvm.internal.Lambda: int getArity()
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzcf)
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzq
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzP
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.android.gms.internal.measurement.zzgq: int zze
com.google.android.gms.internal.measurement.zzej
androidx.window.R$styleable: int[] ActivityRule
com.google.android.gms.internal.measurement.zzex: com.google.android.gms.internal.measurement.zzex zza
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.gms.internal.measurement.zzgc: boolean zzac
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
androidx.window.embedding.ActivityRule: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.android.gms.internal.measurement.zzgx: com.google.android.gms.internal.measurement.zzgx zza
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.android.gms.internal.measurement.zzgc: long zzk
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.embedding.EmbeddingTranslatingCallback
kotlinx.coroutines.StandaloneCoroutine
com.google.android.gms.internal.measurement.zzjz
androidx.window.core.Bounds: android.graphics.Rect toRect()
androidx.window.core.Bounds: int getHeight()
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
androidx.window.layout.SidecarCompat$TranslatingCallback
com.google.android.gms.internal.measurement.zzfq: int zze
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
androidx.window.layout.EmptyDecorator
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
kotlinx.coroutines.channels.AbstractChannel
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
kotlinx.coroutines.JobSupport$ChildCompletion
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
androidx.window.core.Bounds: int hashCode()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
com.google.android.gms.internal.measurement.zzej: boolean zzl
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
androidx.window.layout.WindowInfoTrackerImpl
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
com.google.android.gms.internal.measurement.zzgq: com.google.android.gms.internal.measurement.zzgq zza
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzjz: com.google.android.gms.internal.measurement.zzjt zza
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] values()
com.google.android.gms.internal.measurement.zzgc: int zzZ
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
com.google.android.gms.internal.measurement.zzes: boolean zzk
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.window.layout.SidecarAdapter: java.lang.String TAG
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.window.layout.SidecarWindowBackend$Companion
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzeq: java.lang.String zzj
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$600(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
com.google.android.gms.internal.measurement.zzcb: com.google.android.gms.internal.measurement.zzcc asInterface(android.os.IBinder)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
com.google.android.gms.internal.measurement.zzkc: java.util.Map zza
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
com.google.android.gms.internal.measurement.zzel: com.google.android.gms.internal.measurement.zzel zza
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzcf)
androidx.window.R$attr: int finishPrimaryWithSecondary
com.google.android.gms.internal.measurement.zzgx: com.google.android.gms.internal.measurement.zzkj zzg
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
androidx.window.R$id: int locale
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
com.google.android.gms.internal.measurement.zzgc
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.activity.ImmLeaksCleaner
com.google.firebase.provider.FirebaseInitProvider
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
com.google.android.gms.internal.measurement.zzfe: boolean zzm
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
com.google.android.gms.internal.measurement.zzfs: com.google.android.gms.internal.measurement.zzkj zzf
com.google.android.gms.internal.measurement.zzes
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
androidx.window.embedding.SplitController: void clearRegisteredRules()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.layout.SidecarCompat: java.lang.String TAG
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzp
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
androidx.window.core.Bounds: int getTop()
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$Companion
androidx.window.R$styleable: int ActivityFilter_activityAction
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
io.flutter.plugin.platform.SingleViewPresentation: java.lang.Object createParams
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView: void setSplashDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
com.google.android.gms.internal.measurement.zzgc: java.lang.String zzB
com.google.android.gms.internal.measurement.zzgl: double zzk
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.google.android.gms.internal.measurement.zzgc: boolean zzaa
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
com.google.android.gms.internal.measurement.zzgc: com.google.android.gms.internal.measurement.zzkj zzH
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.android.FlutterSplashView$SavedState: android.os.Bundle splashScreenState
kotlinx.coroutines.BlockingEventLoop
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
androidx.window.layout.FoldingFeature
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
kotlin.jvm.internal.FunctionReference: boolean isOperator()
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
androidx.window.embedding.SplitPlaceholderRule
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State valueOf(java.lang.String)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
androidx.window.core.Bounds: boolean isEmpty()
com.google.android.gms.internal.measurement.zzgc: long zzl
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
com.google.android.gms.internal.measurement.zzgc: long zzV
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
